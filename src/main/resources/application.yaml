spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  application:
    name: ads
  datasource:
    url: ${DBMS_CONNECTION}
    username: ${DBMS_USERNAME}
    password: ${DBMS_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 50
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 20000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: 6379
      connect-timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: 2000
        shutdown-timeout: 1000
  cache:
    type: redis
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 100MB
  ai:
    openai:
      api-key: ${OPEN_AI_KEY}
      chat:
        options:
          model: ${OPEN_AI_MODEL_CHAT}
  threads:
    virtual:
      enabled: true
  cloud:
    openfeign:
      client:
        config:
          stable-diffusion:
            connect-timeout: 5000
            read-timeout: 90000
resilience4j:
  circuitbreaker:
    instances:
      stableDiffusionApi:
        failureRateThreshold: 50 # Tỷ lệ lỗi (tính bằng %) để Circuit Breaker chuyển sang trạng thái OPEN (mở). Nếu 50% số cuộc gọi gần đây nhất thất bại, CB sẽ mở.
        waitDurationInOpenState: 60s # Thời gian (Duration) mà Circuit Breaker sẽ ở trạng thái OPEN. Trong thời gian này, tất cả các cuộc gọi sẽ thất bại ngay lập tức (và gọi fallback).
        permittedNumberOfCallsInHalfOpenState: 10 # Khi Circuit Breaker chuyển từ OPEN sang HALF_OPEN, nó cho phép một số lượng giới hạn các request đi qua (ví dụ: 10 request). Nếu các request này thành công, CB sẽ chuyển sang CLOSED. Nếu thất bại, nó lại quay về OPEN.
        slidingWindowType: COUNT_BASED # Loại cửa sổ trượt để tính toán tỷ lệ lỗi. COUNT_BASED (dựa trên số lượng cuộc gọi) hoặc TIME_BASED (dựa trên thời gian).
        slidingWindowSize: 100 # Kích thước của cửa sổ trượt. Nếu là COUNT_BASED, là số lượng cuộc gọi gần nhất. Nếu là TIME_BASED, là khoảng thời gian (seconds).
        minimumNumberOfCalls: 20 # Số lượng cuộc gọi tối thiểu phải xảy ra trong sliding window trước khi Circuit Breaker bắt đầu tính toán tỷ lệ lỗi.
  timelimiter: # Cấu hình timeout ở cấp độ Resilience4j, không phải Feign. Circuit Breaker sử dụng này.
    instances:
      stableDiffusionApi: # Phải khớp với tên circuit breaker
        timeoutDuration: 80 # Nếu
server:
  port: 8080
  tomcat:
    threads:
      max: 500
      min-spare: 15
    accept-count: 200

app:
  base:
    url: ${BASE_URL}
  jwt:
    signature: ${JWT_SIGNATURE}
    access-token-ttl: ${ACCESS_TOKEN_TTL}
    refresh-token-ttl: ${REFRESH_TOKEN_TTL}
  outbound:
    identity:
      client-id: ${GOOGLE_CLIENT_ID}
      client-secret: ${GOOGLE_CLIENT_SECRET}
      redirect-uri: ${GOOGLE_REDIRECT_URI}

payos:
  client-id: ${PAYOS_CLIENT_ID}
  api-key: ${PAYOS_API_KEY}
  checksum-key: ${PAYOS_CHECKSUM_KEY}

aws:
  region: ap-southeast-1
  bucket:
    name: ${AWS_S3_BUCKET}

stable-diffusion:
  url: ${STABLE_DIFFUSION_URL}
  token: ${STABLE_DIFFUSION_TOKEN}
  model-checkpoint: ${MODEL_CHECKPOINT}
  controlnet:
    module: ${CONTROLNET_MODEL}
    model: ${CONTROLNET_MODULE}
  pixel:
    max: ${STABLE_DIFFUSION_MAX_PIXEL}
    min: ${STABLE_DIFFUSION_MIN_PIXEL}

brevo:
  key: ${BREVO_KEY}
  sender-name: ${BREVO_SENDER_NAME}
  sender-email: ${BREVO_SENDER_EMAIL}
  verify-url: ${BREVO_VERIFY_URL}
  password-reset-url: ${BREVO_PASSWORD_RESET_URL}